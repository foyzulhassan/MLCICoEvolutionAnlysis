name: build

on:
  push:
    branches:
      - 'ci-enable/**'
      - 'master'
  pull_request:
  workflow_dispatch:

jobs:
  gui:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        node-version:
          - 14
        architecture:
          - x64
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          ignore_sha: true
          all_but_latest: true
          access_token: ${{ github.token }}
      - name: Checkout Texera
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          architecture: ${{ matrix.architecture }}
      - uses: actions/cache@v2
        with:
          path: |
            core/new-gui/node_modules
            core/new-gui/multi-target/node_modules
          key: ${{ runner.os }}-yarn-cache-v4-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-cache-v4-
      - name: Install dependency
        run: yarn --cwd core/new-gui install --frozen-lockfile --progress=false
      - name: Lint with ESLint
        run: yarn --cwd core/new-gui eslint ./src
      - name: Run frontend unit tests
        run: yarn --cwd core/new-gui run test:ci
      - name: Prod build
        run: yarn --cwd core/new-gui run build

  amber:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        java-version: [ 8, 11 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          ignore_sha: true
          all_but_latest: true
          access_token: ${{ github.token }}
      - name: Checkout Texera
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
      - uses: coursier/cache-action@v6
      - name: Lint with scalafmt
        run: cd core/amber && sbt scalafmtCheckAll
      - name: Compile with sbt
        run: cd core/amber && sbt clean package
      - name: Run backend tests
        run: cd core/amber && sbt -v -J-Xmx2G test

  python_udf:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          ignore_sha: true
          all_but_latest: true
          access_token: ${{ github.token }}
      - name: Checkout Texera
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f core/amber/requirements.txt ]; then pip install -r core/amber/requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 core/amber/src/main/python --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 core/amber/src/main/python --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          cd core/amber/src/main/python && pytest -sv