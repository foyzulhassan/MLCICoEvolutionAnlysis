name: Test Suite

on: 
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

defaults:
  run:
    shell: bash
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    steps:
    - uses: actions/checkout@v2
    - name: Checkout Submodules
      uses: textbook/git-checkout-submodule-action@master
    - name: Install Webots Dependencies 
      run: sudo apt -y install git g++ cmake execstack libusb-dev swig libglu1-mesa-dev libglib2.0-dev libfreeimage-dev libfreetype6-dev libxml2-dev libzzip-0-13 libboost-dev libavcodec-extra libgd-dev libssh-gcrypt-dev libzip-dev libreadline-dev pbzip2 libpci-dev libssl1.0-dev ffmpeg python2.7-dev python3.6-dev python3.7-dev python3.8-dev python-pip openjdk-11-jdk npm libassimp-dev xserver-xorg-core libpulse0 curl fakeroot libxkbcommon-x11-dev libxcb-keysyms1 libxcb-image0 libxcb-icccm4 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 
    - name: Make
      run: |
        export LIBGL_ALWAYS_SOFTWARE=true
        xvfb-run --auto-servernum make distrib -j4
    - uses: actions/upload-artifact@v2
      with:
        path: distribution/*.tar.bz2
  test-suite:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        test: [tests/test_suite.py, tests/manual_tests/test_worlds_warnings.py, src/packaging/update_all_worlds.py]
        include:
          - test: tests/test_suite.py
            POST_TASK: ""
          - test: tests/manual_tests/test_worlds_warnings.py
            POST_TASK: ""
          - test: src/packaging/update_all_worlds.py
            POST_TASK: "if [[ \"$(git diff --name-only *.wbt | wc -l)\" -ne \"0\" ]]; then echo Some worlds are not up to date: \"$(git diff --name-only *.wbt)\" \"$(git diff *.wbt)\"; exit -1; fi"
    steps:  
    - uses: actions/checkout@v2
    - name: Make
      run: mkdir install
    - name: Download Artifacts
      uses: actions/download-artifact@v2
    - name: Extract Webots
      run: |
        tar xjf artifact/webots-*-x86-64.tar.bz2 -C artifact
    - name: Install Webots Dependencies
      run: sudo apt -y install xserver-xorg-core libpulse0 libglu1-mesa g++ cmake libusb-dev swig python2.7-dev libglu1-mesa-dev libglib2.0-dev libfreeimage-dev libfreetype6-dev libxml2-dev libzzip-0-13 libssl1.0-dev libboost-dev libavcodec-extra libgd-dev libssh-gcrypt-dev libzip-dev python-pip libreadline-dev libassimp-dev ffmpeg npm python3.6-dev python3.7-dev openjdk-11-jdk curl fakeroot pbzip2 libxkbcommon-x11-dev libxcb-keysyms1 libxcb-image0 libxcb-icccm4 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: ${{ matrix.test }}
      run: |
        export LIBGL_ALWAYS_SOFTWARE=true
        export WEBOTS_HOME=$PWD/artifact/webots
        xvfb-run --auto-servernum python ${{ matrix.test }}
        ${{ matrix.POST_TASK }}