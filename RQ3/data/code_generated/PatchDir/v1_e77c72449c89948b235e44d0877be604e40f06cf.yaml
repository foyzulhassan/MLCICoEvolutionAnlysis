name: Continuous Delivery

on:
  pull_request:
    branches:
      - dev

jobs:
  call-syft_tests:
    if: github.repository == 'OpenMined/PySyft' # don't run on forks
    uses: OpenMined/PySyft/.github/workflows/syft-pr_tests.yml@dev

  call-grid-backend_test:
    if: github.repository == 'OpenMined/PySyft' # don't run on forks
    uses: OpenMined/PySyft/.github/workflows/grid-backend_tests.yml@dev

  call-grid-frontend_test:
    if: github.repository == 'OpenMined/PySyft' # don't run on forks
    uses: OpenMined/PySyft/.github/workflows/grid-frontend_tests.yml@dev

  call-syft-security:
    if: github.repository == 'OpenMined/PySyft' # don't run on forks
    uses: OpenMined/PySyft/.github/workflows/syft-security.yml@dev

  call-syft-version_tests:
    if: github.repository == 'OpenMined/PySyft' # don't run on forks
    uses: OpenMined/PySyft/.github/workflows/syft-version_tests.yml@dev

  call-stack-integration_tests:
    needs: [call-syft_tests, call-grid-backend_test, call-syft-security, call-grid-frontend_test, call-syft_tests, call-syft-version_tests]
    if: github.repository == 'OpenMined/PySyft' # don't run on forks
    uses: OpenMined/PySyft/.github/workflows/stack-integration_tests.yml@dev

  deploy-syft-beta:
    needs: [call-syft_tests, call-grid-backend_test, call-stack-integration_tests, call-syft-security, call-grid-frontend_test, call-syft_tests, call-syft-version_tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.SYFT_BUMP_TOKEN }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools wheel twine tox bump2version
      - name: Bump the Version
        run: |
          ls **/VERSION | xargs -I {} python {}
          cat packages/grid/devspace.yaml | grep '0\.'
          bump2version prenum --allow-dirty --no-commit
          tox -e lint || true
          ls **/VERSION | xargs -I {} python {}
          cat packages/grid/devspace.yaml | grep '0\.'
      - name: Commit changes
        uses: EndBug/add-and-commit@v7
        with:
          author_name: Madhava Jay
          author_email: madhava@openmined.org
          message: "bump version"
          add: "['.bumpversion.cfg', 'VERSION', 'packages/grid/VERSION', 'packages/grid/devspace.yaml', 'packages/syft/src/syft/VERSION', 'packages/grid/frontend/package.json', 'packages/grid/frontend/src/pages/_domain/login.tsx', 'packages/syft/src/syft/__init__.py']"
          pull_strategy: NO-PULL
      - name: Set Grid package version
        run: echo "GRID_VERSION=$(python packages/grid/VERSION)" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker meta for Grid-Backend
        id: meta_grid_backend
        uses: docker/metadata-action@v3
        with:
          images: openmined/grid-backend
          tags: |
            type=raw,value=${{ env.GRID_VERSION }}
            type=raw,value=latest

      - name: Docker meta for Grid-Frontend
        id: meta_grid_frontend
        uses: docker/metadata-action@v3
        with:
          images: openmined/grid-frontend
          tags: |
            type=raw,value=${{ env.GRID_VERSION }}
            type=raw,value=latest

      - name: Docker meta for Grid-Headscale
        id: meta_grid_headscale
        uses: docker/metadata-action@v3
        with:
          images: openmined/grid-vpn-headscale
          tags: |
            type=raw,value=${{ env.GRID_VERSION }}
            type=raw,value=latest

      - name: Docker meta for Grid-Tailscale
        id: meta_grid_tailscale
        uses: docker/metadata-action@v3
        with:
          images: openmined/grid-vpn-tailscale
          tags: |
            type=raw,value=${{ env.GRID_VERSION }}
            type=raw,value=latest