name: Rhel Podman Stack Tests

on:
  workflow_call:

  pull_request:
    branches:
      - dev

  workflow_dispatch:
    inputs:
      none:
        description: "Run Version Tests Manually"
        required: false

jobs:
  podman-tests-stack:
    strategy:
      max-parallel: 99
      matrix:
        os: [om-ci-rhel-9]
        python-version: ["3.11"]
      fail-fast: false

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v3

      - name: check python version
        run: |
          python${{matrix.python-version}} --version

      # - name: Check for file changes
      #   uses: dorny/paths-filter@v2
      #   id: changes
      #   with:
      #     base: ${{ github.ref }}
      #     token: ${{ github.token }}
      #     filters: .github/file-filters.yml

      # - name: Set up Python ${{ matrix.python-version }}
      #   uses: buildjet/setup-python@v4
      #   with:
      #     python-version: ${{ matrix.python-version }}

      # - name: Get pip cache dir
      #   if: steps.changes.outputs.stack == 'true'
      #   id: pip-cache
      #   run: |
      #     echo "::set-output name=dir::$(pip cache dir)"

      # - name: pip cache
      #   uses: actions/cache@v3
      #   if: steps.changes.outputs.stack == 'true'
      #   with:
      #     path: ${{ steps.pip-cache.outputs.dir }}
      #     key: ${{ runner.os }}-pip-py${{ matrix.python-version }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-py${{ matrix.python-version }}

      # - name: Upgrade pip
      #   if: steps.changes.outputs.stack == 'true'
      #   run: |
      #     python -m pip install --upgrade --user pip

      # - name: Install tox
      #   # if: steps.changes.outputs.stack == 'true'
      #   run: |
      #     pip${{matrix.python-version}} install -U tox

      - name: Install Syft & Hagrid
        # if: steps.changes.outputs.stack == 'true'
        run: |
          pip${{matrix.python-version}} install -e packages/syft
          pip${{matrix.python-version}} install -e packages/hagrid

      - name: Install Pytest and nbmake
        # if: steps.changes.outputs.stack == 'true'
        run: |
          pip${{matrix.python-version}} install -U pytest nbmake

      - name: Run notebook tests
        #if: steps.changes.outputs.stack == 'true'
        env:
          ORCHESTRA_DEPLOYMENT_TYPE: "rhel_podman"
        run: |
          pytest --nbmake notebooks/api/0.8 -p no:randomly -vvvv