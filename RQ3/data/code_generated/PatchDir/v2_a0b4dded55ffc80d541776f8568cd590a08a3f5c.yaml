# This is a basic workflow to help you get started with Actions

name: CI Windows

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: >
        cmake -B ${{github.workspace}}/build 
            -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
            -DFAST_MODULE_OpenVINO=ON 
            -DFAST_MODULE_Dicom=ON 
            -DFAST_MODULE_WholeSlideImaging=ON 
            -DFAST_MODULE_OpenIGTLink=ON 
            -DFAST_MODULE_Clarius=OFF 
            -DFAST_MODULE_HDF5=ON 
            -DFAST_MODULE_Plotting=ON 
            -DFAST_MODULE_RealSense=ON 
            -DFAST_BUILD_EXAMPLES=ON
    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j 4
      
#   - name: Test
#     run: ${{github.workspace}}/build/bin/testFAST [processobject]