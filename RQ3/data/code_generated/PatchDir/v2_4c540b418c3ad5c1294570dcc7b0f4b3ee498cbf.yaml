name: Unit Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [11, 12, 13, 14, 15-ea, 16-ea]
    env:
      MCL: examples/mcl
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build Markov Clustering
      run: make -C examples mcl
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java-version }}
    - name: Check for Updates
      run: mvn -B versions:display-dependency-updates versions:display-plugin-updates
    - name: Build with Maven
      run: mvn -B package
    - name: Build with Maven (Shade)
      run: mvn -Dshade=true -B package
    - name: Build Javadoc
      run: mvn -B javadoc:javadoc
      if: matrix.java-version == '16-ea' && github.ref == 'refs/heads/master'
    - name: Upload Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./target/site/apidocs
      if: matrix.java-version == '16-ea' && github.ref == 'refs/heads/master'
  examples:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build Markov Clustering
      run: make -C examples mcl
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build with Maven
      run: mvn install -DskipTests=true -Dmaven.javadoc.skip=true -Dshade=true -B
    - name: Symlink watset.jar
      run: ln -sf $PWD/target/watset.jar examples/watset.jar
    - name: Run Examples
      run: make -C examples HardClustering FuzzyClustering CommandLine
  shellcheck:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Run ShellCheck
      run: bash -c 'shopt -s globstar nullglob; shellcheck **/*.{sh,ksh,bash}'
  snapshot:
    runs-on: ubuntu-latest
    needs: [test, examples, shellcheck]
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up Maven Central Repository
      uses: actions/setup-java@v1
      with:
        java-version: 11
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
    - name: Set up GnuPG
      run: gpg --import -a <<< $GPG_SIGNING_KEY
      env:
        GPG_SIGNING_KEY: ${{ secrets.OSSRH_SIGNING_KEY }}
    - name: Publish Snapshot to Maven Central Repository
      run: mvn deploy -B -P ossrh -DskipTests=true
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}