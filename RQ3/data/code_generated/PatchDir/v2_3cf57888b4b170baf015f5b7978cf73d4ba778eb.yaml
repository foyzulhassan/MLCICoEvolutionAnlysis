name: CI

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags: '*'

jobs:
  test:
    name: ${{ matrix.suite }} - Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1' # Replace this with the minimum Julia version that your package supports.
          - 'nightly'
        os:
          - ubuntu-latest
          - macOS-latest
          # - windows-latest
        arch:
          - x64
        suite:
          - '["AlexNext", "VGG"]'
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - name: "Run tests"
        run: |
          julia --project=./test -e 'using Pkg; Pkg.develop(path = ".")'
          julia --code-coverage=user --color=yes --depwarn=yes --project=./test -e 'include("test/retest.jl"); retest(${{ matrix.suite }})'
        continue-on-error: ${{ matrix.version == 'nightly' }}
        shell: bash
      - uses: julia-actions/julia-processcoverage@v1
        if: matrix.version == '1' && matrix.os == 'ubuntu-latest'
      - uses: codecov/codecov-action@v2
        if: matrix.version == '1' && matrix.os == 'ubuntu-latest'
        with:
          file: lcov.info