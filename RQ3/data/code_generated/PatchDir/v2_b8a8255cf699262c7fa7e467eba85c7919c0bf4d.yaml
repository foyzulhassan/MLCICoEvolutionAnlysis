name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 11
    - name: Build with Maven
      run: mvn package -DskipTests=true -Dmaven.javadoc.skip=true -Dshade=true -B
    - name: Get Version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: Watset ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/watset.jar
        asset_name: watset.jar
        asset_content_type: application/java-archive
    - name: Set up GitHub Packages
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 11
        server-id: github
        settings-path: ${{ github.workspace }}
    - name: Publish to GitHub Packages
      run: mvn deploy -B -P github -DskipTests=true -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Set up Maven Central Repository
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 11
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
    - name: Set up GnuPG
      run: gpg --import -a <<< $GPG_SIGNING_KEY
      env:
        GPG_SIGNING_KEY: ${{ secrets.OSSRH_SIGNING_KEY }}
    - name: Publish to Maven Central Repository
      run: mvn deploy -B -P ossrh -DskipTests=true
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        build-args: |
          RELEASE=${{ steps.get_version.outputs.VERSION }}
        tags: |
          ghcr.io/nlpub/watset-java:latest
          ghcr.io/nlpub/watset-java:${{ steps.get_version.outputs.VERSION }}