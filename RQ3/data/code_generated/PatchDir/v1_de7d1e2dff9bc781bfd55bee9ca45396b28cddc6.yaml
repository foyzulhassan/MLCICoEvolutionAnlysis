name: status

on:
  push:
    paths-ignore:
    - 'docs/**'

jobs:

  lint-test:

    runs-on: ubuntu-latest

    container:
      image: analysiscenter1/ds-py3:cpu

    steps:
    - uses: actions/checkout@v1
      with:
          fetch-depth: 1

    - name: Update pylint
      run: pip3 install -U pylint

    - name: Check pylint 
      run: pylint -rn --rcfile pylintrc batchflow

    - name: Run tests
      if: always()
      run: pytest -m "not slow" --disable-pytest-warnings -v

    - name: Slack notification
      if: success()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: pullreminders/slack-action@master
      with:
        args: '{\"channel\": \"#commits\", \"attachments\": [{\"color\": \"good\", \"text\": \"<${{ github.event.commits[0].url }}|${{ github.repository }}: *${{ github.event.commits[0].message }}*> by ${{ github.event.commits[0].author.name }}\n<${{ github.event.commits[0].url }}/checks|Workflow ${{ github.workflow }}>: `${{ job.status }}`\"}]}'

    - name: Slack notification
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: pullreminders/slack-action@master
      with:
        args: '{\"channel\": \"#commits\", \"attachments\": [{\"color\": \"danger\", \"text\": \"<${{ github.event.commits[0].url }}|${{ github.repository }}: *${{ github.event.commits[0].message }}*> by ${{ github.event.commits[0].author.name }}\n<${{ github.event.commits[0].url }}/checks|Workflow ${{ github.workflow }}>: `${{ job.status }}`\"}]}'

  
  test_requirements:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7]

    steps:
    - uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install batchflow requirements
      run: |
        pip install -r requirements.txt
        pip install pytest
    
    - name: Run 'import batchflow' in installed environemnt
      run: python -c 'import batchflow' 

    - name: Run basic tests
      run: |
        cd batchflow/tests
        pytest --disable-pytest-warnings -v dataset_test.py filesindex_test.py datasetindex_test.py