name: RHEL 9 VM Tests

on:
  workflow_call:

  pull_request:
    branches:
      - dev

  workflow_dispatch:
    inputs:
      none:
        description: "Run Version Tests Manually"
        required: false

jobs:
  vm-tests-stack:
    strategy:
      max-parallel: 99
      matrix:
        os: [om-ci-rhel-9]
        python-version: ["3.11"]
      fail-fast: false

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v3

      - name: Check for file changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          base: ${{ github.ref }}
          token: ${{ github.token }}
          filters: .github/file-filters.yml

      #   - name: Set up Python ${{ matrix.python-version }}
      #     uses: actions/setup-python@v3
      #     if: steps.changes.outputs.stack == 'true'
      #     with:
      #       python-version: "3.x"
      #       cache: "pip"
      #     env:
      #       AGENT_TOOLSDIRECTORY: /opt/hostedtoolache

      - name: Get pip cache dir
        if: steps.changes.outputs.stack == 'true'
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v3
        if: steps.changes.outputs.stack == 'true'
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}
          restore-keys: |
            ${{ runner.os }}-pip-py${{ matrix.python-version }}

      - name: Upgrade pip
        if: steps.changes.outputs.stack == 'true'
        run: |
          python -m pip install --upgrade --user pip

      - name: Install tox
        if: steps.changes.outputs.stack == 'true'
        run: |
          pip install -U tox

      - name: Run notebook tests
        if: steps.changes.outputs.stack == 'true'
        # env:
        #   ORCHESTRA_DEPLOYMENT_TYPE: "${{ matrix.deployment-type }}"
        run: |
          tox -e stack.test.rhel