name: CD - Syft - Deploy `dev` to K8s

on:
  schedule:
    - cron: "0 */3 * * *"

  workflow_dispatch:
    inputs:
      none:
        description: "Run Tests Manually"
        required: false

jobs:
  deploy-syft:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Azure container registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set Grid package version
        id: grid
        shell: bash
        run: echo "GRID_VERSION=$(python packages/grid/VERSION)" >> $GITHUB_OUTPUT

      - name: Build and push `grid-backend` image to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./packages
          file: ./packages/grid/backend/backend.dockerfile
          push: true
          platforms: linux/amd64
          target: backend
          tags: |
            ${{ secrets.ACR_SERVER }}/grid-backend:dev
            ${{ secrets.ACR_SERVER }}/grid-backend:${{ steps.grid.outputs.GRID_VERSION }}
            ${{ secrets.ACR_SERVER }}/grid-backend:${{ github.sha }}
          # cache-from: type=registry,ref=${{ steps.meta_grid_backend.outputs.tags }}
          # cache-to: type=inline

      - name: Build and push `grid-frontend` image to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./packages/grid/frontend
          file: ./packages/grid/frontend/frontend.dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.ACR_SERVER }}/grid-frontend:dev
            ${{ secrets.ACR_SERVER }}/grid-frontend:${{ steps.grid.outputs.GRID_VERSION }}
            ${{ secrets.ACR_SERVER }}/grid-frontend:${{ github.sha }}
          target: grid-ui-development
          # cache-from: type=registry,ref=${{ steps.meta_grid_frontend.outputs.tags }}
          # cache-to: type=inline

      - name: Build and push `grid-enclave` image to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./packages
          file: ./packages/grid/worker/worker.dockerfile
          push: true
          platforms: linux/amd64
          target: worker
          tags: |
            ${{ secrets.ACR_SERVER }}/grid-enclave:dev
            ${{ secrets.ACR_SERVER }}/grid-enclave:${{ steps.grid.outputs.GRID_VERSION }}
            ${{ secrets.ACR_SERVER }}/grid-enclave:${{ github.sha }}
          # cache-from: type=registry,ref=${{ steps.meta_grid_enclave.outputs.tags }}
          # cache-to: type=inline

      - name: Build and push `grid-headscale` image to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./packages/grid/vpn
          file: ./packages/grid/vpn/headscale.dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.ACR_SERVER }}/grid-headscale:dev
            ${{ secrets.ACR_SERVER }}/grid-headscale:${{ steps.grid.outputs.GRID_VERSION }}
            ${{ secrets.ACR_SERVER }}/grid-headscale:${{ github.sha }}
          # cache-from: type=registry,ref=${{ steps.meta_grid_headscale.outputs.tags }}
          # cache-to: type=inline

      - name: Build and push `grid-tailscale` image to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./packages/grid/vpn
          file: ./packages/grid/vpn/tailscale.dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.ACR_SERVER }}/grid-tailscale:dev
            ${{ secrets.ACR_SERVER }}/grid-tailscale:${{ steps.grid.outputs.GRID_VERSION }}
            ${{ secrets.ACR_SERVER }}/grid-tailscale:${{ github.sha }}
          # cache-from: type=registry,ref=${{ steps.meta_grid_tailscale.outputs.tags }}
          # cache-to: type=inline

      - name: Build and push `grid-vpn-iptables` image to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: ./packages/grid/vpn
          file: ./packages/grid/vpn/iptables.dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.ACR_SERVER }}/grid-vpn-iptables:dev
            ${{ secrets.ACR_SERVER }}/grid-vpn-iptables:${{ steps.grid.outputs.GRID_VERSION }}
            ${{ secrets.ACR_SERVER }}/grid-vpn-iptables:${{ github.sha }}
          # cache-from: type=registry,ref=${{ steps.meta_grid_vpn_iptables.outputs.tags }}
          # cache-to: type=inline