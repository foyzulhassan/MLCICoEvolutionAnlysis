OBJECT [0,6076]
    FIELD [1,15]
        String: "name" [1,7]
        STRING [8,15]
            String: "Tests" [8,15]
    FIELD [16,44]
        String: "on" [16,20]
        ARRAY [21,44]
            STRING [22,28]
                String: "push" [22,28]
            STRING [29,43]
                String: "pull_request" [29,43]
    FIELD [45,6075]
        String: "jobs" [45,51]
        OBJECT [52,6075]
            FIELD [53,6074]
                String: "build" [53,60]
                OBJECT [61,6074]
                    FIELD [62,87]
                        String: "runs-on" [62,71]
                        STRING [72,87]
                            String: "ubuntu-latest" [72,87]
                    FIELD [88,138]
                        String: "strategy" [88,98]
                        OBJECT [99,138]
                            FIELD [100,137]
                                String: "matrix" [100,108]
                                OBJECT [109,137]
                                    FIELD [110,136]
                                        String: "python-version" [110,126]
                                        ARRAY [127,136]
                                            NUMBER [128,131]
                                                Number: 3.6 [128,131]
                                            NUMBER [132,135]
                                                Number: 3.9 [132,135]
                    FIELD [139,6073]
                        String: "steps" [139,146]
                        ARRAY [147,6073]
                            OBJECT [148,178]
                                FIELD [149,177]
                                    String: "uses" [149,155]
                                    STRING [156,177]
                                        String: "actions/checkout@v2" [156,177]
                            OBJECT [179,339]
                                FIELD [180,205]
                                    String: "uses" [180,186]
                                    STRING [187,205]
                                        String: "actions/cache@v2" [187,205]
                                FIELD [206,338]
                                    String: "with" [206,212]
                                    OBJECT [213,338]
                                        FIELD [214,235]
                                            String: "path" [214,220]
                                            STRING [221,235]
                                                String: "~/.cache/pip" [221,235]
                                        FIELD [236,296]
                                            String: "key" [236,241]
                                            STRING [242,296]
                                                String: "${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}" [242,296]
                                        FIELD [297,337]
                                            String: "restore-keys" [297,311]
                                            STRING [312,337]
                                                String: "${{ runner.os }}-pip-\n" [312,337]
                            OBJECT [340,483]
                                FIELD [341,392]
                                    String: "name" [341,347]
                                    STRING [348,392]
                                        String: "Set up Python ${{ matrix.python-version }}" [348,392]
                                FIELD [393,425]
                                    String: "uses" [393,399]
                                    STRING [400,425]
                                        String: "actions/setup-python@v2" [400,425]
                                FIELD [426,482]
                                    String: "with" [426,432]
                                    OBJECT [433,482]
                                        FIELD [434,481]
                                            String: "python-version" [434,450]
                                            STRING [451,481]
                                                String: "${{ matrix.python-version }}" [451,481]
                            OBJECT [484,562]
                                FIELD [485,504]
                                    String: "name" [485,491]
                                    STRING [492,504]
                                        String: "Setup java" [492,504]
                                FIELD [505,535]
                                    String: "uses" [505,511]
                                    STRING [512,535]
                                        String: "actions/setup-java@v1" [512,535]
                                FIELD [536,561]
                                    String: "with" [536,542]
                                    OBJECT [543,561]
                                        FIELD [544,560]
                                            String: "java-version" [544,558]
                                            NUMBER [559,560]
                                                Number: 8 [559,560]
                            OBJECT [563,2911]
                                FIELD [564,593]
                                    String: "name" [564,570]
                                    STRING [571,593]
                                        String: "Install dependencies" [571,593]
                                FIELD [594,2910]
                                    String: "run" [594,599]
                                    STRING [600,2910]
                                        String: "echo $GITHUB_EVENT_NAME\nsudo apt-get update\nsudo apt-get install libstdc++6 graphviz python3-dev libgraphviz-dev pkg-config\n# Install test/Travis-specific dependencies not covered elsewhere\npip install pydot jsonschema coverage nose-timer doctest-ignore-unicode awscli pycodestyle\nmkdir -p $HOME/.pybel/data\nwget -nv https://bigmech.s3.amazonaws.com/travis/pybel_cache.db -O $HOME/.pybel/data/pybel_cache.db\nmkdir -p $HOME/.indra/bio_ontology/1.12\nwget -nv https://bigmech.s3.amazonaws.com/travis/bio_ontology/1.12/mock_ontology.pkl -O $HOME/.indra/bio_ontology/1.12/bio_ontology.pkl\n# PySB and dependencies\nwget \"https://github.com/RuleWorld/bionetgen/releases/download/BioNetGen-2.4.0/BioNetGen-2.4.0-Linux.tgz\" -O bionetgen.tar.gz -nv\ntar xzf bionetgen.tar.gz\npip install git+https://github.com/pysb/pysb.git\n# Temporary fix. Ensure cython is installed before pyjnius\npip install cython\n# Now install INDRA with all its extras\npip install .[all]\npip install tox\nwget -nv https://bigmech.s3.amazonaws.com/travis/Phosphorylation_site_dataset.tsv -O indra/resources/Phosphorylation_site_dataset.tsv\n# Run slow tests only if we're in the cron setting\n#- |\n#  if [[ $TRAVIS_EVENT_TYPE == \"cron\" ]]; then\n#      export RUN_SLOW=true;\n#  fi\n# Install TEES only if slow tests are being run\n#- |\n#  if [[ $RUN_SLOW == \"true\" ]]; then\n#      sudo pip2 install numpy\n#      sudo apt-get --yes install ruby;\n#      aws s3 cp s3://bigmech/travis/TEES.tar.bz2 . --no-sign-request --no-sign-request;\n#      tar xjf TEES.tar.bz2;\n#      mv TEES ~/TEES;\n#      export TEES_SETTINGS=~/TEES/tees_local_settings.py\n#  fi\n# Install nose notify\n#mkdir $HOME/.nose_notify;\n#git clone https://github.com/pagreene/nose-notify.git $HOME/.nose_notify;\n#export PYTHONPATH=$PYTHONPATH:$HOME/.nose_notify;\n# Download adeft models\npython -m adeft.download\nwget -nv https://bigmech.s3.amazonaws.com/travis/reach-82631d-biores-e9ee36.jar\nwget -nv https://bigmech.s3.amazonaws.com/travis/eidos.jar\nwget -nv https://bigmech.s3.amazonaws.com/travis/geonames%2Bworedas.zip\nmkdir -p /home/runner/work/indra/indra/cache/geonames/index\nmv geonames+woredas.zip /home/runner/work/indra/indra/cache/geonames/index\ncd /home/runner/work/indra/indra/cache/geonames/index\nunzip geonames+woredas.zip\n" [600,2910]
                            OBJECT [2912,2950]
                                FIELD [2913,2929]
                                    String: "name" [2913,2919]
                                    STRING [2920,2929]
                                        String: "Linting" [2920,2929]
                                FIELD [2930,2949]
                                    String: "run" [2930,2935]
                                    STRING [2936,2949]
                                        String: "tox -e mypy" [2936,2949]
                            OBJECT [2951,6072]
                                FIELD [2952,2975]
                                    String: "name" [2952,2958]
                                    STRING [2959,2975]
                                        String: "Run unit tests" [2959,2975]
                                FIELD [2976,3378]
                                    String: "env" [2976,2981]
                                    OBJECT [2982,3378]
                                        FIELD [2983,3037]
                                            String: "AWS_ACCESS_KEY_ID" [2983,3002]
                                            STRING [3003,3037]
                                                String: "${{ secrets.AWS_ACCESS_KEY_ID }}" [3003,3037]
                                        FIELD [3038,3100]
                                            String: "AWS_SECRET_ACCESS_KEY" [3038,3061]
                                            STRING [3062,3100]
                                                String: "${{ secrets.AWS_SECRET_ACCESS_KEY }}" [3062,3100]
                                        FIELD [3101,3155]
                                            String: "INDRA_DB_REST_URL" [3101,3120]
                                            STRING [3121,3155]
                                                String: "${{ secrets.INDRA_DB_REST_URL }}" [3121,3155]
                                        FIELD [3156,3218]
                                            String: "INDRA_DB_REST_API_KEY" [3156,3179]
                                            STRING [3180,3218]
                                                String: "${{ secrets.INDRA_DB_REST_API_KEY }}" [3180,3218]
                                        FIELD [3219,3271]
                                            String: "ELSEVIER_API_KEY" [3219,3237]
                                            STRING [3238,3271]
                                                String: "${{ secrets.ELSEVIER_API_KEY }}" [3238,3271]
                                        FIELD [3272,3326]
                                            String: "ELSEVIER_INST_KEY" [3272,3291]
                                            STRING [3292,3326]
                                                String: "${{ secrets.ELSEVIER_INST_KEY }}" [3292,3326]
                                        FIELD [3327,3377]
                                            String: "BIOGRID_API_KEY" [3327,3344]
                                            STRING [3345,3377]
                                                String: "${{ secrets.BIOGRID_API_KEY }}" [3345,3377]
                                FIELD [3379,6071]
                                    String: "run" [3379,3384]
                                    STRING [3385,6071]
                                        String: "# Set nose attributes based on the context in which we are running\nexport NOSEATTR=\"!notravis,!slow,!cron\";\nexport NOSEATTR=$(if [ \"$GITHUB_EVENT_NAME\" == \"pull_request\" ]; then echo $NOSEATTR,!nonpublic; else echo $NOSEATTR; fi)\necho $NOSEATTR\n#echo \"TRAVIS_BRANCH=$TRAVIS_BRANCH, PR=$PR, BRANCH=$BRANCH\"\n#echo \"$TRAVIS_EVENT_TYPE\"\n#export TEES_PATH=~/TEES\n#export PYTHONPATH=$PYTHONPATH:$TRAVIS_BUILD_DIR\nexport _JAVA_OPTIONS=\"-Xmx4g -Xms1g\"\nexport BNGPATH=`pwd`/BioNetGen-2.4.0\nexport REACHPATH=`pwd`/reach-82631d-biores-e9ee36.jar\nexport CLASSPATH=$REACHPATH\n# These are files that are ignored so that doctests don't fail\nexport NOSE_IGNORE_FILES=\"find_full_text_sentence.py\";\n\necho $NOSEATTR\n#- cd $TRAVIS_BUILD_DIR\n# Now run all INDRA tests\nnosetests -v -a $NOSEATTR --exclude='.*tees.*' --exclude='.*isi.*' --exclude='.*eidos.*' --with-coverage --cover-inclusive --cover-package=indra --with-doctest --with-doctest-ignore-unicode --with-timer --timer-top-n 10 --processes=0\n# TEES tests\n#- python -m nose_notify indra/tests/test_tees.py --slack_hook $SLACK_NOTIFY_HOOK\n#  --label \"$TRAVIS_REPO_SLUG - $TRAVIS_BRANCH\" -v -a $NOSEATTR --process-restartworker;\n# Eidos tests\nexport EIDOSPATH=`pwd`/eidos.jar\nexport CLASSPATH=$EIDOSPATH\nnosetests -v -a $NOSEATTR indra/tests/test_eidos.py\n# Run NL model examples only when the environmental variable\n# RUN_NL_MODELS is set to true in the Travis build\n# NOTE: if blocks in Travis DO NOT FAIL even if there is\n# and error in one of the commands inside. Therefore passing\n# alone does not mean that all the operations inside were\n# successful. Rather, the log needs to be inspected and compared\n# to desired behavior.\n#- |\n#  if [[ $RUN_NL_MODELS == \"true\" ]]; then\n#      cd $TRAVIS_BUILD_DIR/models\n#      python hello_indra.py\n#      cd $TRAVIS_BUILD_DIR/models/p53_model\n#      python run_p53_model.py noplot\n#      cd $TRAVIS_BUILD_DIR/models/braf_model\n#      python assemble_model.py\n#      cd $TRAVIS_BUILD_DIR/models/ras_pathway\n#      python run_ras_pathway.py trips\n#   fi\n# Run assembly benchmarks\n#- cd $TRAVIS_BUILD_DIR/indra/benchmarks/assembly_eval/batch4\n#- |\n#  if [[ $TRAVIS_EVENT_TYPE == \"cron\" ]]; then\n#    # Download a number of useful resource files for testing purposes\n#    aws s3 cp s3://bigmech/travis/trips_reach_batch4.gz .  --no-sign-request  --source-region us-east-1\n#    tar -xf trips_reach_batch4.gz\n#    python run_combined.py\n#  fi\n#- cd $TRAVIS_BUILD_DIR\n# Run code style report on diff\n#- git remote set-branches --add origin master\n#- git fetch\n#- git diff origin/master | pycodestyle --diff > pep8.txt; cat pep8.txt;" [3385,6071]