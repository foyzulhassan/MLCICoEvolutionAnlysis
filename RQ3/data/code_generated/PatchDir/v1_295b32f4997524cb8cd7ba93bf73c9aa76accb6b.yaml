on: [pull_request]
name: test and build
env:
  GOPROXY: "https://proxy.golang.org"
jobs:
  test-gopath:
    env:
      GO111MODULE: off
    strategy:
      matrix:
        go: [1.14]
    runs-on: ubuntu-latest
    steps:
    - name: Install Go ${{ matrix.go }}
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go }}
    - name: setup env
      run: |
        echo "::set-env name=GOPATH::${{ github.workspace }}/go"
        echo "::add-path::${{ github.workspace }}/go/bin"
      shell: bash
    - name: Checkout code
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
        path: src/gorgonia.org/${{ github.repository }}
    - name: Get dependencies
      run: go get -t
    - name: Run tests
      run: go test -v -covermode=count .

  test:
    strategy:
      matrix:
        go: [1.13, 1.14]
        goos: [linux, darwin]
        goarch: [amd64, arm]
        exclude:
          # windows/386 and darwin/386 seems useless
          - goarch: "arm"
          - goos: darwin
    runs-on: ubuntu-latest
    steps:

    - name: Install Go ${{ matrix.go }}
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Run tests
      run: go test -v -covermode=count .
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}

  coverage:
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.13.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Calc coverage
      run: |
        export PATH=$PATH:$(go env GOPATH)/bin
        go test -v -covermode=count -coverprofile=coverage.out
    - name: Convert coverage to lcov
      uses: jandelgado/gcov2lcov-action@v1.0.0
      with:
          infile: coverage.out
          outfile: coverage.lcov
    - name: Coveralls
      uses: coverallsapp/github-action@v1.0.1
      with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: coverage.lcov

  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.13.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: build
      run: go build .