name: HAGrid PR Tests

on:
  pull_request:
    branches:
      - dev
      - demo_strike_team_branch_4
      - "0.6.0"
    paths:
      - ".github/workflows/hagrid-*.yml"
      - "packages/hagrid/**.py"
      - "packages/hagrid/**.txt"
      - "packages/hagrid/setup.cfg"
defaults:
  run:
    working-directory: ./packages/hagrid

jobs:
  hagrid-tests:
    strategy:
      max-parallel: 3
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: [3.9]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: |
          pip install --upgrade --user pip

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('packages/hagrid/setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-py${{ matrix.python-version }}-

      - name: Install Dependencies
        run: |
          pip install --upgrade bandit safety setuptools wheel twine tox
          pip install -e .

      - name: Scan for security issues
        continue-on-error: true
        run: |
          bandit -r .
          safety check

      - name: Build Wheel
        run: |
          python setup.py bdist_wheel

      - name: Twine Check
        run: |
          twine check `find -L ./ -name "*.whl"`