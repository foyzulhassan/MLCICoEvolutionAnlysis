name: Test Suite

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]
  schedule:
    - cron:  '0 23 * * *'
  push:
    tags:
      - '*'

defaults:
  run:
    shell: bash
jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
    - uses: rokroskar/workflow-run-cleanup-action@master
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  build:
    needs: cleanup-runs
    if: ${{ github.event_name == 'push' || github.event_name == 'schedule' || contains(github.event.pull_request.labels.*.name, 'test distribution') || contains(github.event.pull_request.labels.*.name, 'test suite') || contains(github.event.pull_request.labels.*.name, 'test world update') }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        include:
          - os: ubuntu-18.04
            JAVA_VERSION: "11"
          - os: ubuntu-20.04
            JAVA_VERSION: "14"
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
         submodules: true
    - name: Install Webots Compilation Dependencies
      run: scripts/install/linux_optional_compilation_dependencies.sh
    - name: Set Commit SHA in Version
      if: ${{ github.event_name == 'schedule' }}
      run: python scripts/packaging/set_commit_and_date_in_version.py ${{ github.sha }}
    - name: Webots Package Creation
      run: |
        echo ${{ github.event.pull_request.labels }}
        export JAVA_HOME=/usr/lib/jvm/java-${{ matrix.JAVA_VERSION }}-openjdk-amd64
        export PATH=$JAVA_HOME/bin:$PATH
        export LIBGL_ALWAYS_SOFTWARE=true
        xvfb-run --auto-servernum make distrib -j4
    - uses: actions/upload-artifact@v2
      with:
        name: build-${{ matrix.os }}
        path: |
          distribution/*.tar.bz2
          distribution/*.deb
    - name: Create/Update GitHub release
      if: ${{ (github.event_name == 'push' || github.event_name == 'schedule') && matrix.os == 'ubuntu-20.04' }}
      run: |
        sudo python -m pip install requests PyGithub
        scripts/packaging/publish_release.py --key=${{ secrets.GITHUB_TOKEN }} --repo=${{ github.repository }} --branch=${{ github.ref }} --commit=${{ github.sha }} --tag=${{ github.ref }}
  test-suite:
    needs: build
    if: ${{ contains(github.event.pull_request.labels.*.name, 'test suite') || contains(github.event.pull_request.labels.*.name, 'test world update') }}
    strategy:
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]
        test: [tests/test_suite.py]
        post_task: [""]
        include:
          - os: ubuntu-18.04
            test: scripts/packaging/update_all_worlds.py
            post_task: "if [[ \"$(git diff --name-only *.wbt *.wbproj | wc -l)\" -ne \"0\" ]]; then echo Some world and/or wbproj files are not up to date: \"$(git diff *.wbt *.wbproj)\"; exit -1; fi"
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-${{ matrix.os }}
        path: artifact
    - name: Extract Webots
      run: tar xjf artifact/webots-*-x86-64.tar.bz2 -C artifact
    - name: Install Webots Dependencies
      run: scripts/install/linux_runtime_dependencies.sh
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: ${{ matrix.test }}
      run: |
        export LIBGL_ALWAYS_SOFTWARE=true
        export WEBOTS_DISABLE_SAVE_SCREEN_PERSPECTIVE_ON_CLOSE=true
        export WEBOTS_HOME=$PWD/artifact/webots
        xvfb-run --auto-servernum python ${{ matrix.test }}
        ${{ matrix.post_task }}