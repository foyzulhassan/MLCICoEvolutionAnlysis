name: dailycmake

on:
  #push:
  schedule:
    # every day
    - cron: 15 10 * * *

jobs:
  build-gcc-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-18.04, ubuntu-20.04 ]
        gcc_version: [ 10, 9, 8, 7, 6, 5 ]
        build_type: [ Release, Debug ]
        exclude:
             - { gcc_version: 5, os: ubuntu-20.04 }
             - { gcc_version: 6, os: ubuntu-20.04 }

    steps:
      - name: Install compiler
        run: sudo apt-get install -y gcc-${{ matrix.gcc_version }} g++-${{ matrix.gcc_version }}
          
      - name: Install dependencies
        run: sudo apt-get install libleptonica-dev libpango1.0-dev -y

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build and run
        run: |
          export CC=gcc-${{ matrix.gcc_version }}
          export CXX=g++-${{ matrix.gcc_version }}
          
      - name: Configure
        run: |
             mkdir build && cd build
             cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ..
        
      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}

  build-clang-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-18.04, ubuntu-20.04 ]
        clang_version: [ 11, 10, 9, 8, 7 ]
        build_type: [ Release, Debug ]
        exclude:
          - { clang_version: 11, os: ubuntu-18.04 }

    steps:
      - name: Install compiler
        run: sudo apt-get install -y clang-${{ matrix.clang_version }}

      - name: Install dependencies
        run: sudo apt-get install libleptonica-dev libpango1.0-dev -y

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build and run
        run: |
          export CC=clang-${{ matrix.clang_version }}
          export CXX=clang++-${{ matrix.clang_version }}
          
      - name: Configure
        run: |
             mkdir build && cd build
             cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ..
        
      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}
        
  build-windows:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: [ Release, Debug ]
        
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: egorpugin/sw-action@master
    
      - name: Configure
        run: |
             mkdir build && cd build
             cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ..
        
      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}

  build-macos:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        build_type: [ Release, Debug ]
        
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: egorpugin/sw-action@master
    
      - name: Configure
        run: |
             mkdir build && cd build
             cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ..
        
      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}