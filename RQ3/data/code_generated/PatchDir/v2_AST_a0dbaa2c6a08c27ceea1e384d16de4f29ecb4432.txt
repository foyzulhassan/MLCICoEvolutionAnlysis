OBJECT [0,5925]
    FIELD [1,15]
        String: "name" [1,7]
        STRING [8,15]
            String: "Tests" [8,15]
    FIELD [16,44]
        String: "on" [16,20]
        ARRAY [21,44]
            STRING [22,28]
                String: "push" [22,28]
            STRING [29,43]
                String: "pull_request" [29,43]
    FIELD [45,5924]
        String: "jobs" [45,51]
        OBJECT [52,5924]
            FIELD [53,5923]
                String: "build" [53,60]
                OBJECT [61,5923]
                    FIELD [62,87]
                        String: "runs-on" [62,71]
                        STRING [72,87]
                            String: "ubuntu-latest" [72,87]
                    FIELD [88,5922]
                        String: "steps" [88,95]
                        ARRAY [96,5922]
                            OBJECT [97,257]
                                FIELD [98,123]
                                    String: "uses" [98,104]
                                    STRING [105,123]
                                        String: "actions/cache@v2" [105,123]
                                FIELD [124,256]
                                    String: "with" [124,130]
                                    OBJECT [131,256]
                                        FIELD [132,153]
                                            String: "path" [132,138]
                                            STRING [139,153]
                                                String: "~/.cache/pip" [139,153]
                                        FIELD [154,214]
                                            String: "key" [154,159]
                                            STRING [160,214]
                                                String: "${{ runner.os }}-pip-${{ hashFiles('**/setup.py') }}" [160,214]
                                        FIELD [215,255]
                                            String: "restore-keys" [215,229]
                                            STRING [230,255]
                                                String: "${{ runner.os }}-pip-\n" [230,255]
                            OBJECT [258,288]
                                FIELD [259,287]
                                    String: "uses" [259,265]
                                    STRING [266,287]
                                        String: "actions/checkout@v2" [266,287]
                            OBJECT [289,380]
                                FIELD [290,316]
                                    String: "name" [290,296]
                                    STRING [297,316]
                                        String: "Set up Python 3.6" [297,316]
                                FIELD [317,349]
                                    String: "uses" [317,323]
                                    STRING [324,349]
                                        String: "actions/setup-python@v1" [324,349]
                                FIELD [350,379]
                                    String: "with" [350,356]
                                    OBJECT [357,379]
                                        FIELD [358,378]
                                            String: "python-version" [358,374]
                                            NUMBER [375,378]
                                                Number: 3.6 [375,378]
                            OBJECT [381,2309]
                                FIELD [382,411]
                                    String: "name" [382,388]
                                    STRING [389,411]
                                        String: "Install dependencies" [389,411]
                                FIELD [412,2308]
                                    String: "run" [412,417]
                                    STRING [418,2308]
                                        String: "sudo apt-get update\nsudo apt-get install openjdk-8-jdk\nsudo apt-get install libstdc++6 graphviz python3-dev libgraphviz-dev pkg-config\n# Install test/Travis-specific dependencies not covered elsewhere\npip install pydot jsonschema coverage nose-timer doctest-ignore-unicode awscli pycodestyle\nmkdir -p $HOME/.pybel/data\naws s3 cp s3://bigmech/travis/pybel_cache.db $HOME/.pybel/data/ --no-sign-request  --source-region us-east-1\nmkdir -p $HOME/.indra/bio_ontology/1.4\naws s3 cp s3://bigmech/travis/bio_ontology/1.4/mock_ontology.pkl $HOME/.indra/bio_ontology/1.4/bio_ontology.pkl --no-sign-request  --source-region us-east-1\n# PySB and dependencies\nwget \"https://github.com/RuleWorld/bionetgen/releases/download/BioNetGen-2.4.0/BioNetGen-2.4.0-Linux.tgz\" -O bionetgen.tar.gz -nv\ntar xzf bionetgen.tar.gz\npip install git+https://github.com/pysb/pysb.git\n# Temporary fix. Ensure cython is installed before pyjnius\npip install cython\n# Now install INDRA with all its extras\npip install .[all]\naws s3 cp s3://bigmech/travis/Phosphorylation_site_dataset.tsv indra/resources/ --no-sign-request  --source-region us-east-1\n# Run slow tests only if we're in the cron setting\n#- |\n#  if [[ $TRAVIS_EVENT_TYPE == \"cron\" ]]; then\n#      export RUN_SLOW=true;\n#  fi\n# Install TEES only if slow tests are being run\n#- |\n#  if [[ $RUN_SLOW == \"true\" ]]; then\n#      sudo pip2 install numpy\n#      sudo apt-get --yes install ruby;\n#      aws s3 cp s3://bigmech/travis/TEES.tar.bz2 . --no-sign-request --no-sign-request;\n#      tar xjf TEES.tar.bz2;\n#      mv TEES ~/TEES;\n#      export TEES_SETTINGS=~/TEES/tees_local_settings.py\n#  fi\n# Install nose notify\n#mkdir $HOME/.nose_notify;\n#git clone https://github.com/pagreene/nose-notify.git $HOME/.nose_notify;\n#export PYTHONPATH=$PYTHONPATH:$HOME/.nose_notify;\n# Download adeft models\npython -m adeft.download\n" [418,2308]
                            OBJECT [2310,5921]
                                FIELD [2311,2334]
                                    String: "name" [2311,2317]
                                    STRING [2318,2334]
                                        String: "Run unit tests" [2318,2334]
                                FIELD [2335,5920]
                                    String: "run" [2335,2340]
                                    STRING [2341,5920]
                                        String: "#export BRANCH=$(if [ \"$TRAVIS_PULL_REQUEST\" == \"false\" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)\n#echo \"TRAVIS_BRANCH=$TRAVIS_BRANCH, PR=$PR, BRANCH=$BRANCH\"\n#echo \"$TRAVIS_EVENT_TYPE\"\n#export TEES_PATH=~/TEES\n#export PYTHONPATH=$PYTHONPATH:$TRAVIS_BUILD_DIR\nexport _JAVA_OPTIONS=\"-Xmx4g -Xms1g\"\nexport BNGPATH=`pwd`/BioNetGen-2.4.0\n# These are files that are ignored so that doctests don't fail\nexport NOSE_IGNORE_FILES=\"find_full_text_sentence.py\";\n# Set nose attributes based on the context in which we are running\nexport NOSEATTR=\"!notravis,!slow,!cron,!nonpublic\";\necho $NOSEATTR\n#- cd $TRAVIS_BUILD_DIR\n# Now run all INDRA tests\nnosetests -v -a $NOSEATTR --exclude='.*tees.*' --exclude='.*isi.*' --with-coverage --cover-inclusive --cover-package=indra --with-doctest --with-doctest-ignore-unicode --with-timer --timer-top-n 10 --processes=0\n# PySB assembler tests (separated due to memory issues)\n#- python -m nose_notify indra/tests/test_pysb_assembler.py --slack_hook $SLACK_NOTIFY_HOOK\n#  --label \"$TRAVIS_REPO_SLUG - $TRAVIS_BRANCH\" -v -a $NOSEATTR --process-restartworker;\n# REST API tests (separated due to memory issues)\n#- python -m nose_notify indra/tests/test_rest_api.py --slack_hook $SLACK_NOTIFY_HOOK\n#  --label \"$TRAVIS_REPO_SLUG - $TRAVIS_BRANCH\" -v -a $NOSEATTR --process-restartworker;\n# TEES tests\n#- python -m nose_notify indra/tests/test_tees.py --slack_hook $SLACK_NOTIFY_HOOK\n#  --label \"$TRAVIS_REPO_SLUG - $TRAVIS_BRANCH\" -v -a $NOSEATTR --process-restartworker;\n# Reach tests\n#- aws s3 cp s3://bigmech/travis/reach-82631d-biores-e9ee36.jar . --no-sign-request  --source-region us-east-1\n#- export REACHPATH=$TRAVIS_BUILD_DIR/reach-82631d-biores-e9ee36.jar\n#- python -m nose_notify indra/tests/test_reach.py\n#  --slack_hook $SLACK_NOTIFY_HOOK\n#  --label \"$TRAVIS_REPO_SLUG - $TRAVIS_BRANCH\" -v -a $NOSEATTR;\n# Eidos tests\n#- aws s3 cp s3://bigmech/travis/eidos.jar . --no-sign-request --source-region us-east-1\n#- export EIDOSPATH=$TRAVIS_BUILD_DIR/eidos.jar\n#- python -m nose_notify indra/tests/test_eidos.py --slack_hook $SLACK_NOTIFY_HOOK\n#  --label \"$TRAVIS_REPO_SLUG - $TRAVIS_BRANCH\" -v -a $NOSEATTR;\n# Run NL model examples only when the environmental variable\n# RUN_NL_MODELS is set to true in the Travis build\n# NOTE: if blocks in Travis DO NOT FAIL even if there is\n# and error in one of the commands inside. Therefore passing\n# alone does not mean that all the operations inside were\n# successful. Rather, the log needs to be inspected and compared\n# to desired behavior.\n#- |\n#  if [[ $RUN_NL_MODELS == \"true\" ]]; then\n#      cd $TRAVIS_BUILD_DIR/models\n#      python hello_indra.py\n#      cd $TRAVIS_BUILD_DIR/models/p53_model\n#      python run_p53_model.py noplot\n#      cd $TRAVIS_BUILD_DIR/models/braf_model\n#      python assemble_model.py\n#      cd $TRAVIS_BUILD_DIR/models/ras_pathway\n#      python run_ras_pathway.py trips\n#   fi\n# Run assembly benchmarks\n#- cd $TRAVIS_BUILD_DIR/indra/benchmarks/assembly_eval/batch4\n#- |\n#  if [[ $TRAVIS_EVENT_TYPE == \"cron\" ]]; then\n#    # Download a number of useful resource files for testing purposes\n#    aws s3 cp s3://bigmech/travis/trips_reach_batch4.gz .  --no-sign-request  --source-region us-east-1\n#    tar -xf trips_reach_batch4.gz\n#    python run_combined.py\n#  fi\n#- cd $TRAVIS_BUILD_DIR\n# Run code style report on diff\n#- git remote set-branches --add origin master\n#- git fetch\n#- git diff origin/master | pycodestyle --diff > pep8.txt; cat pep8.txt;" [2341,5920]