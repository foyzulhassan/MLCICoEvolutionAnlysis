name: Test Suite Windows

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]
  schedule:
    - cron:  '0 23 * * *'
  push:
    tags:
      - '*'
    branches:  #TODO: remove
      - '*'

defaults:
  run:
    shell: msys2 {0}

jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
    - uses: rokroskar/workflow-run-cleanup-action@master
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  build:
    needs: cleanup-runs
    if: ${{ github.event_name == 'push' || github.event_name == 'schedule' || contains(github.event.pull_request.labels.*.name, 'test distribution') || contains(github.event.pull_request.labels.*.name, 'test suite') }}
    strategy:
      matrix:
        os: [windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        update: true
    #- uses: actions/checkout@v2
    #  with:
    #     submodules: true
    - name: debug
      shell: cmd
      run: |
        choco install python --version 2.7.11
        choco install python --version 3.7.9
        choco install python --version 3.8.6
        choco install python --version 3.9.0
    - name: Install Webots Compilation Dependencies
      run: |
        ls /C
        ls "/C/Program Files"
        ls "/C/Program Files (x86)"
        python --version
        where python
        where python2.7
        where python3.7
        where python3.8
        where python3.9
        cat scripts/install/bash_profile.windows >> ~/.bash_profile
        ./scripts/install/msys64_installer.sh --all
    - name: Set Commit SHA in Version
      if: ${{ github.event_name == 'schedule' }}
      run: python scripts/packaging/set_commit_and_date_in_version.py ${{ github.sha }}
    - name: Webots Package Creation
      run: |
        export JAVA_HOME=/C/Program\ Files/Java/jdk1.8.0_265
        export VISUAL_STUDIO_PATH="/C/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise"
        export INNO_SETUP_HOME="/C/Program Files (x86)/Inno Setup 6"
        export WEBOTS_HOME=$GITHUB_WORKSPACE
        make distrib -j4
    - uses: actions/upload-artifact@v2
      with:
        name: build-${{ matrix.os }}
        path: |
          distribution/*.exe
  test-suite:
    needs: build
    if: ${{ contains(github.event.pull_request.labels.*.name, 'test suite') }}
    strategy:
      matrix:
        os: [windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-${{ matrix.os }}
        path: artifact