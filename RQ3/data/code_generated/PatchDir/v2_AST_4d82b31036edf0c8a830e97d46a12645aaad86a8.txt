OBJECT [0,4109]
    FIELD [1,14]
        String: "name" [1,7]
        STRING [8,14]
            String: "Docs" [8,14]
    FIELD [15,182]
        String: "on" [15,19]
        OBJECT [20,182]
            FIELD [21,40]
                String: "pull_request" [21,35]
                NULL [36,40]
            FIELD [41,156]
                String: "push" [41,47]
                OBJECT [48,156]
                    FIELD [49,90]
                        String: "branches" [49,59]
                        ARRAY [60,90]
                            STRING [61,70]
                                String: "nightly" [61,70]
                            STRING [71,77]
                                String: "main" [71,77]
                            STRING [78,89]
                                String: "release/*" [78,89]
                    FIELD [91,155]
                        String: "tags" [91,97]
                        ARRAY [98,155]
                            STRING [99,121]
                                String: "v[0-9]+.[0-9]+.[0-9]" [99,121]
                            STRING [122,154]
                                String: "v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+" [122,154]
            FIELD [157,181]
                String: "workflow_dispatch" [157,176]
                NULL [177,181]
    FIELD [183,4108]
        String: "jobs" [183,189]
        OBJECT [190,4108]
            FIELD [191,2548]
                String: "build" [191,198]
                OBJECT [199,2548]
                    FIELD [200,264]
                        String: "uses" [200,206]
                        STRING [207,264]
                            String: "pytorch/test-infra/.github/workflows/linux_job.yml@main" [207,264]
                    FIELD [265,2547]
                        String: "with" [265,271]
                        OBJECT [272,2547]
                            FIELD [273,302]
                                String: "repository" [273,285]
                                STRING [286,302]
                                    String: "pytorch/vision" [286,302]
                            FIELD [303,327]
                                String: "upload-artifact" [303,320]
                                STRING [321,327]
                                    String: "docs" [321,327]
                            FIELD [328,351]
                                String: "test-infra-ref" [328,344]
                                STRING [345,351]
                                    String: "main" [345,351]
                            FIELD [352,2546]
                                String: "script" [352,360]
                                STRING [361,2546]
                                    String: "set -euo pipefail\n\nexport PYTHON_VERSION=3.8\nexport GPU_ARCH_TYPE=cpu\nexport GPU_ARCH_VERSION=''\n./.github/scripts/setup-env.sh\n\n# Prepare conda\nCONDA_PATH=$(which conda)\neval \"$(${CONDA_PATH} shell.bash hook)\"\nconda activate ci\n# FIXME: not sure why we need this. `ldd torchvision/video_reader.so` shows that it\n#  already links against the one pulled from conda. However, at runtime it pulls from\n#  /lib64\n# Should we maybe always do this in `./.github/scripts/setup-env.sh` so that we don't\n# have to pay attention in all other workflows?\nexport LD_LIBRARY_PATH=\"${CONDA_PREFIX}/lib:${LD_LIBRARY_PATH}\"\n\ncd docs\n\necho '::group::Install doc requirements'\npip install --progress-bar=off -r requirements.txt\necho '::endgroup::'\n\nif [[ ${{ github.event_name }} == push && (${{ github.ref_type }} == tag || (${{ github.ref_type }} == branch && ${{ github.ref_name }} == release/*)) ]]; then\n  echo '::group::Enable version string sanitization'\n  # This environment variable just has to exist and must not be empty. The actual value is arbitrary.\n  # See docs/source/conf.py for details\n  export TORCHVISION_SANITIZE_VERSION_STR_IN_DOCS=1\n  echo '::endgroup::'\nfi\n\n# The runner does not have sufficient memory to run with as many processes as there are\n# cores (`-j auto`). Thus, we limit to a single process (`-j 1`) here.\nsed -i -e 's/-j auto/-j 1/' Makefile\nmake html\n\n# Below is an imperfect way for us to add \"try on collab\" links to all of our gallery examples.\n# sphinx-gallery will convert all gallery examples to .ipynb notebooks and stores them in\n# build/html/_downloads/<some_hash>/<example_name>.ipynb\n# We copy all those ipynb files in a more convenient folder so that we can more easily link to them.\nmkdir build/html/_generated_ipynb_notebooks\nfor file in `find build/html/_downloads`; do\n  if [[ $file == *.ipynb ]]; then\n    cp $file build/html/_generated_ipynb_notebooks/\n  fi\ndone\n\ncp -r build/html \"${RUNNER_ARTIFACT_DIR}\"\n\n# On PRs we also want to upload the docs into our S3 bucket for preview.\nif [[ ${{ github.event_name == 'pull_request' }} ]]; then\n  cp -r build/html/* \"${RUNNER_DOCS_DIR}\"\nfi\n" [361,2546]
            FIELD [2549,4107]
                String: "upload" [2549,2557]
                OBJECT [2558,4107]
                    FIELD [2559,2574]
                        String: "needs" [2559,2566]
                        STRING [2567,2574]
                            String: "build" [2567,2574]
                    FIELD [2575,2742]
                        String: "if" [2575,2579]
                        STRING [2580,2742]
                            String: "github.repository == 'pytorch/vision' && github.event_name == 'push' && ((github.ref_type == 'branch' && github.ref_name == 'main') || github.ref_type == 'tag')" [2580,2742]
                    FIELD [2743,2777]
                        String: "permissions" [2743,2756]
                        OBJECT [2757,2777]
                            FIELD [2758,2776]
                                String: "contents" [2758,2768]
                                STRING [2769,2776]
                                    String: "write" [2769,2776]
                    FIELD [2778,2842]
                        String: "uses" [2778,2784]
                        STRING [2785,2842]
                            String: "pytorch/test-infra/.github/workflows/linux_job.yml@main" [2785,2842]
                    FIELD [2843,4106]
                        String: "with" [2843,2849]
                        OBJECT [2850,4106]
                            FIELD [2851,2880]
                                String: "repository" [2851,2863]
                                STRING [2864,2880]
                                    String: "pytorch/vision" [2864,2880]
                            FIELD [2881,2907]
                                String: "download-artifact" [2881,2900]
                                STRING [2901,2907]
                                    String: "docs" [2901,2907]
                            FIELD [2908,2924]
                                String: "ref" [2908,2913]
                                STRING [2914,2924]
                                    String: "gh-pages" [2914,2924]
                            FIELD [2925,2948]
                                String: "test-infra-ref" [2925,2941]
                                STRING [2942,2948]
                                    String: "main" [2942,2948]
                            FIELD [2949,4105]
                                String: "script" [2949,2957]
                                STRING [2958,4105]
                                    String: "set -euo pipefail\n\nREF_TYPE=${{ github.ref_type }}\nREF_NAME=${{ github.ref_name }}\n\nif [[ \"${REF_TYPE}\" == branch ]]; then\n  TARGET_FOLDER=\"${REF_NAME}\"\nelif [[ \"${REF_TYPE}\" == tag ]]; then\n  case \"${REF_NAME}\" in\n    *-rc*)\n      echo \"Aborting upload since this is an RC tag: ${REF_NAME}\"\n      exit 0\n      ;;\n    *)\n      # Strip the leading \"v\" as well as the trailing patch version. For example:\n      # 'v0.15.2' -> '0.15'\n      TARGET_FOLDER=$(echo \"${REF_NAME}\" | sed 's/v\\([0-9]\\+\\)\\.\\([0-9]\\+\\)\\.[0-9]\\+/\\1.\\2/')\n      ;;\n  esac\nfi\necho \"Target Folder: ${TARGET_FOLDER}\"\n\nmkdir -p \"${TARGET_FOLDER}\"\nrm -rf \"${TARGET_FOLDER}\"/*\nmv \"${RUNNER_ARTIFACT_DIR}\"/html/* \"${TARGET_FOLDER}\"\ngit add \"${TARGET_FOLDER}\" || true\n\nif [[ \"${TARGET_FOLDER}\" == main ]]; then\n  mkdir -p _static\n  rm -rf _static/*\n  cp -r \"${TARGET_FOLDER}\"/_static/* _static\n  git add _static || true\nfi\n\ngit config user.name 'pytorchbot'\ngit config user.email 'soumith+bot@pytorch.org'\ngit config http.postBuffer 524288000\ngit commit -m \"auto-generating sphinx docs\" || true\ngit push" [2958,4105]