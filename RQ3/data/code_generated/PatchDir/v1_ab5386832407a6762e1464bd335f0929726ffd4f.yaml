on: [ push ]

jobs:
#  php5-3_compat:
#    runs-on: ubuntu-latest
#    container:
#      image: composer:2.0
#    steps:
#      - name: checkout
#        uses: actions/checkout@v2
#      - name: test
#        run: |
#          composer install
#          ./vendor/bin/phpcs src/ --extensions=php --ignore=class-wordlift-entity-types-taxonomy-walker-5-3.php,autoload_static.php \
#              --standard=PHPCompatibilityWP --runtime-set testVersion 5.3


  javascript:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: test
        users: docker://ziodave/node-chromium:node10-1
        with:
          args: run test:js

#  wordpress_tests:
#    name: ${{ matrix.image }}
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        image:
#          - "php5.4-phpunit4.8-wordpress4.4"
#          - "php5.5-phpunit4.8-wordpress4.4"
#          - "php5.6-phpunit4.8-wordpress4.5"
#          - "php7.0-phpunit4.8-wordpress5.2"
#          - "php7.1-phpunit4.8-wordpress5.3"
#          - "php7.2-phpunit4.8-wordpress5.4"
#          - "php7.3-phpunit4.8-wordpress5.5"
##          - "php8.0-phpunit4.8-wordpress5.6"
#      max-parallel: 1
#    # If you want the following envs to be avail to docker, you need to add them to `docker run`.
#    env:
#      ACF_PRO_KEY: ${{ secrets.ACF_PRO_KEY }}
#      WORDLIFT_API_URL: ${{  secrets.WORDLIFT_API_URL }}
#      WORDLIFT_KEY: ${{ secrets.WORDLIFT_KEY }}
#    services:
#      db:
#        image: mysql:5.7
#        env:
#          MYSQL_ROOT_PASSWORD: password
#          MYSQL_USER: wordpress
#          MYSQL_PASSWORD: password
#          MYSQL_DATABASE: wordpress
#        ports:
#          - 3306:3306
#    steps:
#      - name: checkout
#        uses: actions/checkout@v2
#      - name: phpunit
#        run: >
#          docker run --workdir /github/workspace --rm -v "/var/run/docker.sock":"/var/run/docker.sock" \
#            -e ACF_PRO_KEY -e WORDLIFT_API_URL -e WORDLIFT_KEY \
#            -v $GITHUB_WORKSPACE:"/github/workspace" \
#            --network $(docker network ls --format="{{ .Name }}" --filter "Name=^github_network_") \
#              ziodave/wordpress-tests:${{ matrix.image }} -c phpunit.xml --stop-on-error --stop-on-fail

#  test:js

#  test:jest

#  test:multisite WP_VERSION=5.4