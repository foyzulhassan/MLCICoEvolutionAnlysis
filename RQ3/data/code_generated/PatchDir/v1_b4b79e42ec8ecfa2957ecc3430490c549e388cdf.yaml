name: Run All Frameworks

on:
  pull_request:
    paths:
      - 'amlb/**'
      - 'frameworks/shared/**'
      - '.github/workflows/run_all_frameworks.yml'
      - '.github/runbenchmark/action.yml'
      - 'runbenchmark.py'
      - 'requirements.txt'


jobs:

  detect_changes:  # Figure out which frameworks need to be evaluated based on which files are changed.
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.find-required-tests.outputs.frameworks }}
      output2: ${{ steps.find-required-tests.outputs.common_changed }}
    steps:
      - uses: actions/checkout@v2
      - name: pull base branch
        run: |
          git fetch --all
          git checkout -b $GITHUB_BASE_REF origin/$GITHUB_BASE_REF
          git checkout $GITHUB_HEAD_REF
      - id: find-required-tests
        name: Detect Common Changes  # detect if any changes occurred that should trigger all frameworks.
        run: |
          changed_files=$(git diff --name-only HEAD..$GITHUB_BASE_REF)
          common_files="amlb/** "\
          "frameworks/shared/** "\
          ".github/workflows/run_all_frameworks.yml "\
          ".github/runbenchmark/action.yml "\
          "runbenchmark.py "\
          "requirements.txt"
          echo Common files: $common_files
          echo Changed files: $common_files

          is_common=1
          for f in $changed_files
          do
            if echo $common_files | grep -e $f >> /dev/null;
            then
                echo File $f detected as common file
                is_common=0
                break
            fi
          done

          if [[ $is_common ]];
          then
            frameworks=["autogluon", "autosklearn", "gama", "h2oautoml", "mlplanweka", "tpot", "constantpredictor", "randomforest", "tunedrandomforest"]
          else
            changed=$(git diff --name-only HEAD..$GITHUB_BASE_REF | grep -o -i -P 'frameworks/(?!shared).*/' | uniq | sed -e 's/frameworks//' -e 's/\///g')
            json_array=[
            for framework in $changed; do json_array=$json_array\"$framework\",; done
            frameworks=${json_array::-1}]  #remove trailing comma and add closing bracket
          fi
          echo Building matrix for frameworks: $frameworks
          echo "::set-output name=frameworks::$frameworks"
          echo "::set-output name=common_changed::$is_common"

  baseline:
    name: Run Baseline on OpenML Iris
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-
      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run constantpredictor on openml iris
        run: |
          python runbenchmark.py constantpredictor openml/t/59 1h4c
      - name: Echo Python Files
        run: |
          python -c "import numpy; print(numpy.__file__)"

  run_frameworks:
    name: ${{ matrix.framework }}/${{ matrix.task }}
    runs-on: ubuntu-latest
    needs: baseline
    strategy:
      matrix:
        python-version: [3.8]
        framework: [autogluon, autosklearn, gama, h2oautoml, mlplanweka, tpot, constantpredictor, randomforest, tunedrandomforest]
        task: [APSFailure, bioresponse, dresses-sales, eucalyptus, internet-advertisements, kc1, micro-mass]
      fail-fast:  true  # not sure about this one, but considering the big workload it might be nicer

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          pip-
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run ${{ matrix.framework }} on ${{ matrix.task }}
      uses: ./.github/actions/runbenchmark
      with:
        framework: ${{ matrix.framework }}
        task: ${{ matrix.task }}