name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"
    env:
      USING_COVERAGE: '3.6,3.7,3.8'

    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8"]

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v1"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install dependencies"
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel pytest
          python -m pip install --upgrade  virtualenv
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-visualizer.txt
          python -m pip install -r requirements-elicitation.txt

      - name: "Run pytest for ${{ matrix.python-version }}"
        run: "python -m pytest ."

  docs:
    name: "Build Documentation"
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v1"
        with:
          python-version: "3.8"

      - name: "Install documentation requirements"
        run: |
          python -m pip install -r requirements.txt
          python -m pip install -r docs/requirements.txt
          python -m pip install -e .
      - name: "Create documentation"
        run: sh make_docs.sh
        working-directory: ./docs

  package:
    name: "Build & verify package"
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v2"      
      - uses: "actions/setup-python@v1"
        with:
          python-version: "3.8"

      - name: "Install pep517 and twine"
        run: "python -m pip install --upgrade pip setuptools wheel pytest twine"
      - name: "Build package"
        run: "python setup.py sdist bdist_wheel"
      - name: "List result"
        run: "ls -l dist"
      - name: "Check long_description"
        run: "python -m twine check"
        
  install-dev:
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]

    name: "Verify dev env"
    runs-on: "${{ matrix.os }}"

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v1"
        with:
          python-version: "3.8"
      - name: "Install in dev mode"
        run: |
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-visualizer.txt
          python -m pip install -r requirements-elicitation.txt
          python -m pip install -r docs/requirements.txt
          python -m pip install -e .
      - name: "Import package"
        run: "python -c 'import negmas; print(negmas.__version__)'"