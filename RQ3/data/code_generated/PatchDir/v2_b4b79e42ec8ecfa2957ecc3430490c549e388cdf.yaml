name: Run All Frameworks

on:
  pull_request:
    paths:
      - 'amlb/**'
      - 'frameworks/shared/**'
      - '.github/workflows/run_all_frameworks.yml'
      - '.github/runbenchmark/action.yml'
      - 'runbenchmark.py'
      - 'requirements.txt'


jobs:
  baseline:
    name: Run Baseline on OpenML Iris
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-
      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run constantpredictor on openml iris
        run: |
          python runbenchmark.py constantpredictor openml/t/59 1h4c
      - name: Echo Python Files
        run: |
          python -c "import numpy; print(numpy.__file__)"

  run_frameworks:
    name: Run validation on all frameworks
    runs-on: ubuntu-latest
    needs: baseline
    strategy:
      matrix:
        python-version: [3.8]
        framework: [autogluon, autosklearn, gama, h2oautoml, mlplanweka, tpot, constantpredictor, randomforest, tunedrandomforest]
        task: [APSFailure, bioresponse, dresses-sales, eucalyptus, internet-advertisements, kc1, micro-mass]
      fail-fast:  true  # not sure about this one, but considering the big workload it might be nicer

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          pip-
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run ${{ matrix.framework }} on ${{ matrix.task }}
      uses: ./.github/actions/runbenchmark
      with:
        framework: ${{ matrix.framework }}
        task: ${{ matrix.task }}